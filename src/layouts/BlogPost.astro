---
import type { CollectionEntry } from "astro:content";

import FormattedDate from "@/components/FormattedDate.astro";
import { Seasons, SEASONS } from "@/consts";
import { cn } from "@/utils/cn";
import RootLayout from "./RootLayout.astro";

type Props = CollectionEntry<"blog">["data"] & {
  readingTime?: string;
};

const { title, description, pubDate, updatedDate, readingTime } = Astro.props;

const month = new Date(pubDate).getMonth();
const season = SEASONS.at(month) as Seasons;
---

<RootLayout title={title} description={description} season={season}>
  <article class="pt-5 sm:pt-10 blog">
    <div
      class={cn(
        "relative",
        "p-10",
        "bg-gradient-to-tr",
        `bg-${season}/10`,
        "rounded-lg",
        "blog-title",
      )}
      data-post-reading-time={readingTime}
    >
      <h1
        class={cn(
          "sm:my-8",
          "my-4",
          "mb-2",
          "sm:mb-4",
          `text-${season}`,
          "text-4xl",
          "sm:text-5xl",
        )}
      >
        {title}
      </h1>
      <FormattedDate date={pubDate} />
      <div class="text-sm">
        {
          updatedDate && (
            <div class="last-updated-on">
              Last updated on <FormattedDate date={updatedDate} />
            </div>
          )
        }
      </div>
    </div>
    <slot />
  </article>
</RootLayout>
